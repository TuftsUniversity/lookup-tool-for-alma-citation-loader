create a flat HTML web page using HTML, CSS, and Javascript to present the user a web page with which they can upload an Excel spreadsheet that has 4 fields: "Title", "Author", "Publisher", "Year".   This spreadsheet will be ingested and read line by line, with the values of each row translating to title, author, publisher, and year.   This will be used to construct an Ex Libris Primo API query in the following format:   "https://api-na.hosted.exlibrisgroup.com/primo/v1/search?q=title,equals," + title + "%20AND%20" + "creator,equals," + author  + "%20AND%20" + "cdate,equals," + date +  "&apikey=" + primo_prod_api + "&vid=01TUN_INST:01TUN&lang=en&tab=Everything&scope=MyInst_and_CI&format=json"  Any one of these values can be missing and should therefore be nullable.

This API call should be run for each row in the spreadsheet.  The result will be returned as a search object of potentially multiple records. Each record will be an element in the docs array in the result.    From each record the result should be output to an Excel spreadsheet, with the same four fields that are in input, plus "ISBN" and "MMS ID"   These are in the docs[0].pnx.addata.isbn[0] and docs[0].pnx.display.mms[0] fields respectively.  The other metadata is in the following fields: docs[0].pnx.addata.btitle[0], docs[0].pnx.addata.au[0], docs[0].pnx.display.publisher[0], docs[0].pnx.display.creationdate[0]

There should be an upload button to upload the input spreadsheet, and a download button to download the results

The parts of the application that parse the input spreadsheet and create the export spreadsheet to download should all be in client-side Javascript.  The only part of the program that should be in the backend PHP should be the part that makes and sends the API call.   The PHP should use PHP core with no additional modules.  Any javascript libraries that are needed should be included in script references in the head of the index document page